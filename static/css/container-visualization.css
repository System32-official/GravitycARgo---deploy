/**
 * Container Visualization Styles
 * CSS for 3D container model visualization
 */

/* Container model wrapper */
.container-model {
  perspective: 1000px;
  width: 250px;
  height: 250px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 2rem auto;
  padding: 20px;
  box-sizing: border-box;
}

/* 3D Container */
.container-3d {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transform: rotateX(30deg) rotateY(45deg);
  transition: transform 0.3s ease;

  /* Default dimensions - these will be overridden by JS */
  --length: 120px;
  --width: 80px;
  --height: 80px;
}

/* Container faces */
.container-face {
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: center center;
  backface-visibility: visible;
  border: 1px solid rgba(255, 255, 255, 0.2);
  transition: all 0.3s ease;
}

/* Front face (Door side) */
.container-face.front {
  background: rgba(59, 130, 246, 0.3);
  transform: translateX(-50%) translateY(-50%)
    translateZ(calc(var(--width) / 2));
  width: var(--length);
  height: var(--height);
}

/* Back face (Opposite wall) */
.container-face.back {
  background: rgba(59, 130, 246, 0.15);
  transform: translateX(-50%) translateY(-50%)
    translateZ(calc(var(--width) / -2));
  width: var(--length);
  height: var(--height);
}

/* Right face */
.container-face.right {
  background: rgba(99, 102, 241, 0.2);
  transform: translateX(-50%) translateY(-50%) rotateY(90deg)
    translateZ(calc(var(--length) / 2));
  width: var(--width);
  height: var(--height);
}

/* Left face */
.container-face.left {
  background: rgba(99, 102, 241, 0.2);
  transform: translateX(-50%) translateY(-50%) rotateY(-90deg)
    translateZ(calc(var(--length) / 2));
  width: var(--width);
  height: var(--height);
}

/* Top face */
.container-face.top {
  background: rgba(139, 92, 246, 0.25);
  transform: translateX(-50%) translateY(-50%) rotateX(90deg)
    translateZ(calc(var(--height) / 2));
  width: var(--length);
  height: var(--width);
}

/* Bottom face */
.container-face.bottom {
  background: rgba(139, 92, 246, 0.15);
  transform: translateX(-50%) translateY(-50%) rotateX(-90deg)
    translateZ(calc(var(--height) / 2));
  width: var(--length);
  height: var(--width);
}

/* Door indicator on front face */
.container-face.front::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60%;
  height: 90%;
  border: 1px dashed rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
}

/* Container Specifications Section */
.container-preview {
  background: rgba(30, 41, 59, 0.5);
  border-radius: 20px;
  padding: 2rem;
  margin-top: 2.5rem;
  margin-bottom: 2rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  border: 1px solid var(--border);
}

.container-preview h4 {
  font-size: 1.1rem;
  color: var(--light);
  margin-bottom: 1rem;
  text-align: center;
}

.container-specs {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
  margin-top: 1rem;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 12px;
}

.spec-item {
  display: flex;
  align-items: center;
  color: var(--gray);
  margin-bottom: 0.5rem;
}

.spec-item i {
  margin-right: 0.75rem;
  color: var(--accent);
  font-size: 0.9rem;
}

.spec-label {
  margin-right: 0.75rem;
}

.spec-value {
  color: var(--light);
  font-weight: 600;
}

/* Hover effects */
.container-3d:hover {
  cursor: move;
}

/* Animation for door indicator */
@keyframes doorPulse {
  0%,
  100% {
    border-color: rgba(255, 255, 255, 0.3);
  }
  50% {
    border-color: rgba(255, 255, 255, 0.7);
  }
}

.container-face.front:hover::after {
  animation: doorPulse 2s infinite;
}
